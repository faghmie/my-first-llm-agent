# Basic agent configuration
agent:
  name: "Default Helpful Agent"
  version: 1.0
  description: "An agent that is helpful."

# Metadata
metadata:
  author: "Faghmie Davids"
  created_at: "2025-05-05"
  last_updated: "2025-05-05"

# Model configuration
model:
  name: "qwen3:4b"
  provider: "ollama"
  api_key: "<your-ollama-api-key>"
  parameters:
    temperature: 0.7
    max_tokens: 2000
    top_p: 0.9

# Capabilities configuration
tools:
  # - module: "agent_tools.jira_epics"
  #   function: "jira_epic_list_tool"
  # - module: "agent_tools.jira_tickets"
  #   function: "jira_ticket_list_tool"

# Prompt templates
prompts:
  greeting: "Hello! How can I assist today?"
  error_response: "I'm sorry, I encountered an issue processing your request."
  system: >
    ## Agent Role
    [Describe the agent's purpose, e.g., "Customer Support Bot", "Medical Diagnosis Assistant"]

    ## User Context
    [Briefly explain the user's scenario, e.g., "A user is troubleshooting a software error"]

    ## Constraints
    - [Limit 1, e.g., "Assume the user is non-technical"]
    - [Limit 2, e.g., "Prioritize solutions under 3 steps"]
    - [Limit 3, e.g., "Avoid jargon"]

    ## Expected Output Format
    - **Tone**: [e.g., Friendly, Professional, Concise]
    - **Structure**: [e.g., Bullet points, JSON, Step-by-step instructions]
    - **Additional Requirements**: [e.g., "Include links to resources", "Cite sources"]

    ## Examples (Optional)
    ```markdown
    ### Example Input
    "{Sample user query}"

    ### Example Output
    "{Ideal agent response matching the format}"

    ### Feedback Loop (Optional)
    [Specify how the agent should seek clarification, e.g., "If the input is ambiguous, ask for screenshots."]

    ### Ethical/Safety Guardrails
    [Rule 1, e.g., "Never store personal data"]
    [Rule 2, e.g., "Flag harmful requests to moderators"]